---
- hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_become: yes

  tasks:
    - name: Update and upgrade apt packages
      become: true
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #One day

     #Set up passwordless sudo for deploy
    - name: Make sure we have a 'wheel' group
      become: yes
      group:
        name: wheel
        state: present
   
    - name: Allow wheel group to have passwordless sudo
      become: yes
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^%wheel"
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
        validate: "visudo -cf %s"

    - name: Create a deploy user
      become: yes
      user:
        name: deploy
        password: Change666Me #Needs to be encrypted
        groups: 
        - sudo
        - wheel
        state: present
        shell: /bin/bash       # Defaults to /bin/bash
        createhome: yes        # Defaults to yes
        home: /home/deploy  # Defaults to /home/<username>
        
    - name: Set up authorized keys
      become: yes
      authorized_key:
        user: deploy
        state: present
        key: '{{ item }}'
      with_file:
        - '../../keys/ssh/id_rsa.pub' 

    - name: Run command tu setup postfix 
      command: debconf-set-selections <<< "postfix postfix/mailname string bigproject.name"

    - name: Run command tu setup postfix mailer type
      command: debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"

    - name: Install required packages
      apt:
        pkg:
          - mysql-server
          - supervisor
          - nginx
          - git
          - python3-pip
          - postfix
        state: latest
        update_cache: true

    - name: Clone microblog repo
      git:
        repo: https://github.com/miguelgrinberg/microblog
        dest: /tmp/microblog

    - name: Setup microblog branch
      args:
        chdir: /tmp/microblog
      command: git checkout v0.17

    - name: Run command tu setup python dependencies
      pip:
        requirements: /tmp/microblog/requirements.txt

    - name: Install multi python packages gunicorn pymysql cryptography
      pip:
        name:
          - gunicorn
          - pymysql
          - cryptography

    - name: Copy microblog repo from /tmp to /home/deploy
      copy: remote_src=True src=/tmp/microblog dest=/home/deploy

    - name: Change file ownership, group and permissions of microblog repo
      ansible.builtin.file:
        path: /home/deploy/microblog
        owner: deploy
        group: deploy
        mode: '0755'
    
    - name: moving .env file to deploy user
      ansible.builtin.copy:
        src: ../files/env
        dest: /home/deploy/.env
        owner: deploy
        group: deploy
        mode: '0744' 

    - name: moving microblog.conf supervisor file to host
      ansible.builtin.copy:
        src: ../files/microblog.nossl
        dest: /etc/supervisor/conf.d/microblog.conf 

    - name: moving certs
      ansible.builtin.copy:
        src: ../files/certs
        dest: /home/deploy/
        owner: deploy
        group: deploy
        mode: '0664'  

    - name: Remove default nginx config
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent        

    - name: moving microblog nginx config to host
      ansible.builtin.copy:
        src: ../files/nginx/microblog
        dest: /etc/nginx/sites-enabled/microblog

    - name: restart nginx service
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: Enable nginx service for startup
      ansible.builtin.service:
        name: nginx
        enabled: yes

    - name: Reload upervisord service
      command: service supervisor reload